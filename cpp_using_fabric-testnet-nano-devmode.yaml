---
name: test-network-org1
version: 1.0.0

client:
  organization: Org1
  connection:
    timeout:
      peer:
        endorser: '300'

organizations:
  Org1:
    mspid: Org1MSP
    peers:
      - peer0.org1.example.com

peers:
  peer0.org1.example.com:
     url: grpc://localhost:7051
    # url: grpc://127.0.0.1:7051
    # url: grpc://peer0.org1.example.com:7051
    grpcOptions:
      hostnameOverride: peer0.org1.example.com
      ssl-target-name-override: peer0.org1.example.com
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: true

channels:
  mychannel:
    peers:
      peer0.org1.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

orderers:
  orderer.example.com:
    url: grpc://localhost:7051
    # url: grpc://127.0.0.1:7050
    # url: grpc://orderer.example.com:7050
    grpcOptions:
      grpc-max-send-message-length: 50000000
      hostnameOverride: orderer.example.com
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: true


# EntityMatchers enable substitution of network hostnames with static configurations
# so that properties can be mapped. Regex can be used for this purpose
# UrlSubstitutionExp can be empty which means the same network hostname will be used
# UrlSubstitutionExp can be given same as mapped peer url, so that mapped peer url can be used
# UrlSubstitutionExp can have golang regex matchers like ${1}.example.${2}:${3} for pattern
# like peer0.org1.example.com:1234 which converts peer0.org1.example.com to peer0.org1.example.com:1234
# sslTargetOverrideUrlSubstitutionExp follow in the same lines as
# SubstitutionExp for the fields gprcOptions.ssl-target-name-override respectively
# In any case mappedHost's config will be used, so mapped host cannot be empty, if entityMatchers are used
# https://github.com/hyperledger/fabric-sdk-go/blob/main/test/fixtures/config/overrides/local_entity_matchers.yaml
entityMatchers:
  peer:
    - pattern: peer0.org1.example.(\w+)
      urlSubstitutionExp: localhost:7051
      sslTargetOverrideUrlSubstitutionExp: peer0.org1.example.com
      mappedHost: peer0.org1.example.com

  orderer:
    - pattern: (\w+).example.(\w+)
      urlSubstitutionExp: localhost:7050
      sslTargetOverrideUrlSubstitutionExp: orderer.example.com
      mappedHost: orderer.example.com